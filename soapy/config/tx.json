{

"_____comment":"put , on the first line for easy moving of lines around"

,"net" : {
	"feedback_bus" :{}
	,"higgs_udp":{
		 "higgs_ip":"127.0.0.1"
		,"pc_ip"   :"127.0.0.1"
		,"rx_cmd"  :10001
		,"tx_cmd"  :20000
		,"tx_data" :30000
		,"rx_data" :40001
	}
	,"zmq":{
		"listen"   :10005
	}
	,"dashboard": {
		"ip":"127.0.0.1"
		,"port":"10008"
		,"do_connect":false
	}
	,"gnuradio_udp": {
		"ip":"127.0.0.1"
		,"port":"10006"
		,"_comment": "must not be set if net.gnuradio_attached.send_data is true"
		,"do_connect":true
	}
	,"gnuradio_attached": {
		"_comment": "setting to false will disable normal soapy/gnuradio operation"
		,"send_data":false
	}
	,"network": {
		"discovery_port0": 10006
		,"discovery_port1": 10007
		,"discovery_ip": "127.0.0.1"
		,"comment": "Which ip should our peers use to conenct to us (office ip address)"
		,"pc_ip": "127.0.0.1"
	}
	,"tun": {
		"_comment": "will run ip commands"
		,"create_up_and_ip": false
		,"ip":"10.2.4.1/24"
		,"user":"root"
	}
}


,"global" : {
	"performance" :{
		"DEBUG_PRINT_LOOPS":true
	}
	,"naked": 42
	,"mole": "rat"
	,"print" : {
		 "PRINT_PEER_RB":true
		,"PRINT_TDMA_SC": 0
		,"PRINT_SFO_CFO_ESTIMATES": true
		,"PRINT_COOKED_BER": false
		,"PRINT_RE_NEW_MESSAGE": false
		,"PRINT_RE_FINE_SCHEDULE": true
		,"PRINT_TX_BUFFER_FILL": false
		,"PRINT_VERIFY_HASH":false
		,"PRINT_RECEIVED_ZMQ":false
	}
	,"file_dump" : {
		"sliced_data" : {
			"enabled":false,
			"path":"sliced_data3.txt",
			"_comment": "enabled this and s-modem will dump sliced data to disk.",
			"__comment": "Open the results with a unit test to fix demodulation bugs "
		}
	}
}

,"dashboard": {
	"only_update_channel_angle_r0": true
	,"channel_angle_rate_divisor": 50
}

,"dsp": {
	"demod" : {
		"CONSIDER_DEMOD_DELAY_THRESH":50
	}

	,"sfo" : {
		"state_thresh": 0.02
		,"sfo_estimate_wait": 2
		,"___comment":"// this number may be very different for different txs. previous is 800"
		,"FITTING_THRESHOLD":5000
		,"background_tolerance":{
			 "upper": 0.1
			,"lower": 0.03
		}
		,"restimate_tolerance": 10
		,"symbol_num": 102400
		,"peers": {
			"t0": 1.39551
		   ,"t1": 0.67
		}
		,"apply_initial":true
	}

	,"cfo": {
		"__comment":""
		,"state_threshold": 0.06
		,"background_tolerance":{
			 "upper": 0.1
			,"lower": 0.01
		}
		,"_comment":"ratio of buffer pulls from cfo buffer into residue buffer"
		,"pull_ratio":100
		,"symbol_num": 102400
		,"peers": {
			"t0": 40.8
		   ,"t1": 20.0
		}
		,"apply_initial":true

	}
	,"sto": {
		"margin": 32
	}
	,"coarse": {
		"tweak": 128
	}
	,"eq": {
		"use_filter":true
		,"update_seconds":4.0
	}

	,"block_fsm": false
}

,"data": {
	"send_packet_when_idle":true
	,"hash": {
		"_comment": "This will cause both sides to zmq the hash of every packet"
		,"validate_all":true
	}
}

,"adc": {
	"gain": {
		"_comment": "convert this number to hex better understand value"
		,"dsa":0
	}
}


,"_______comment": "exp is short for experiment"

,"exp": {
	"our": {
		"role":"tx"
		,"zmq_name": "fred"
		,"id": 17,         "comment":"This should match rx_master_peer or peers[t0/t1].  This can be read from soapy->this_node.id"
	}
	,"peers": {
		 "t0":2
		,"t1":1
	}
	,"DSP_WAIT_FOR_PEERS": 2
	,"___comment": "this must match what the node.csv has"
	,"rx_master_peer": 17

	,"control": {
		"skip_wait_peers": false
	}
	,"poll_rx_for_cpu_load": false
	,"fsm_skip_r1":true
	,"allow_zhen_go_back":false
	,"debug_eq_before_schedule":false
	,"eq_patch_negative_sfo":false
	,"tdma_force_first_row":false
	,"test_coarse_mode":false
	,"test_coarse_mode_and_adjust":false
	,"_comment":"this one tells the rx side to send a debug message to tx side after sync"
	,"debug_tx_epoc":true
	,"debug_tx_epoc_and_zmq":false
	,"flood_ping_test":false
	,"__comment":"coarse sync is normally sent to tx side, this does it on rx.  for mock js"
	,"debug_coarse_sync_on_rx":false
	,"debug_tx_local_epoc":false
	,"__comment":"set this and use tx side only, without rx radio. Tests smodem->cs20 communications through mapmov"
	,"debug_tx_fill_level":true
	,"debug_tx_reset_fb_only":false
	,"flood_rb_test":false
	,"skip_check_attached_fb":false
	,"skip_check_fb_datarate":false
	,"___comment":"send large udp packets when multiple ringbus are going to attached.  only valid for mock higgs"
	,"aggregate_attached_rb":false
	,"integration_test": {
		 "run_time":120
		,"test_enabled":false
	}
}

,"runtime": {
	"_comment":"do not add values here, these will be created at runtime"
}

,"demod":{
	"disable_open_once":true
}

}
